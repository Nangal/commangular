/**
 * Command pattern implementation for AngularJS
 * @version v0.3.0 - 2013-11-17
 * @link https://github.com/yukatan/commangular
 * @author Jesús Barquín Cheda <yukatan@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(a,b){function c(a){this.commandType=a,this.descriptors=[],this.command=null,this.commandConfig}function d(a){this.context=a,this.deferred=null}function e(a,b,c){d.apply(this,[b]),this.command=a,this.commandConfig=c,this.execute=function(){var a=!1,b=this.context.$q,c=this.context.$injector;this.deferred=b.defer();var d=c.instantiate(this.command,this.context.getContextData());try{var e=c.invoke(d.execute,this.command,this.context.getContextData()),f=this.context.processResults(e,this.deferred,this.commandConfig)}catch(g){if(a=!0,d.hasOwnProperty("onError")){var h=this.context.getContextData();h.lastError=g,c.invoke(d.onError,this.command,this.context.getContextData())}this.deferred.reject(g)}return d.hasOwnProperty("onComplete")&&!a&&f.then(function(){c.invoke(d.onComplete,self.command,self.context.getContextData())}),this.deferred.promise}}function f(a,b){d.apply(this,[a]),this.descriptors=b,this.start=function(){return this.deferred=this.context.$q.defer(),this.execute(),this.deferred.promise}}function g(a,b){f.apply(this,[a,b]),this.currentIndex=0,this.execute=function(){var a=this,b=this.descriptors[this.currentIndex],c=this.context.instantiate(b);(c instanceof g||c instanceof h)&&c.start().then(function(){a.nextCommand()},function(b){a.deferred.reject(b)}),c instanceof e&&c.execute().then(function(){a.nextCommand()},function(b){a.deferred.reject(b)})},this.nextCommand=function(){return++this.currentIndex==this.descriptors.length?(this.deferred.resolve(),void 0):(this.execute(),void 0)}}function h(a,b){f.apply(this,[a,b]),this.totalComplete=0,this.execute=function(){for(var a=this,b=0;b<this.descriptors.length;b++){var c=this.descriptors[b],d=this.context.instantiate(c);(d instanceof g||d instanceof h)&&d.start().then(function(){a.checkComplete()},function(b){a.deferred.reject(b)}),d instanceof e&&d.execute().then(function(){a.checkComplete()},function(b){a.deferred.reject(b)})}},this.checkComplete=function(){++this.totalComplete==this.descriptors.length&&this.deferred.resolve()}}function i(a,b,c,d){this.contextData=d||{},this.instantiator=c,this.$injector=a,this.$q=b,this.contextData.commandModel={}}function j(){return{instantiate:function(a,b){var c={};return"S"==a.commandType&&(c=new g(b,a.descriptors)),"P"==a.commandType&&(c=new h(b,a.descriptors)),"E"==a.commandType&&(c=new e(a.command,b,a.commandConfig)),c}}}var k=a.commangular||(a.commangular={});k.create=function(a,b,c){k.functions||(k.functions={}),k.functions[a]={"function":b,config:c}},c.prototype.add=function(a){this.descriptors.push(a)},e.prototype=d,e.prototype.constructor=e,f.prototype=d,f.prototype.constructor=f,g.prototype=f,g.prototype.constructor=g,h.prototype=f,h.prototype.constructor=h,i.prototype.instantiate=function(a){var b=this.instantiator.instantiate(a,this);return b},i.prototype.processResults=function(a,b,c){var d=this;if(!a)return b.resolve(),void 0;var e=this.$q.when(a).then(function(a){d.contextData.lastResult=a,c&&c.resultKey&&(d.contextData[c.resultKey]=a),b.resolve()});return e},i.prototype.getContextData=function(){return this.contextData},b.module("commangular",[]).provider("$commangular",function(){var a,d={},e=[];return{$get:["commandExecutor",function(a){return a.descriptors=d,{dispatch:function(b,c){return a.execute(b,c)}}}],asSequence:function(){return a&&e.push(a),a=new c("S"),this},asParallel:function(){return a&&e.push(a),a=new c("P"),this},add:function(d){if(b.isString(d)&&(d=this.get(d)),d instanceof c)return a.add(d),this;var e=new c("E");return e.command=d.function,e.commandConfig=d.config,a.add(e),this},mapTo:function(b){if(e.length>0)throw"Incorrect command structure on "+b;d[b]=a,a=null},create:function(){var b=a;return a=e.length>0?e.pop():null,b},get:function(a){return k.functions[a]},findCommand:function(a){return d[a]}}}),b.module("commangular").service("commandExecutor",["$injector","$q",function(a,b){return{descriptors:{},execute:function(c,d){var e=b.defer(),f=new i(a,b,new j,d),g=this.descriptors[c],h=f.instantiate(g);return h.start().then(function(){console.log("Command Complete"),e.resolve()},function(a){console.log("Command context end with error :"+a),e.reject(a)}),e.promise}}}])}(window,angular);